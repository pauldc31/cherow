version: 2.1

map-1: &filter_only_master
  filters:
    branches:
      only:
        - master

map-2: &filter_only_dev
  filters:
    branches:
      only:
        - dev

map-3: &filter_ignore_dev
  filters:
    branches:
      ignore:
        - dev

map-4: &filter_only_tag
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+(\.[0-9]+)*$/

executors:

  docker-circleci:
    parameters:
      node:
        type: string
        default: "10.12"
    working_directory: ~/repo
    docker:
      - image: "circleci/node:<< parameters.node >>-stretch-browsers"

jobs:

  build:
    executor: docker-circleci
    steps:
      - checkout
      - run: npm ci
      - run: npm run build

  lint:
    executor: docker-circleci
    steps:
      - checkout
      - run: npm ci
      - run: npm run lint

  bundle:
    executor: docker-circleci
    steps:
      - checkout
      - run: npm ci
      - run: npm run bundle

  test:
    executor: docker-circleci
    parameters:
      coverage:
        type: boolean
        default: true
    steps:
      - checkout
      - run: npm ci
      - run: npm run test

  publish_dev:
    executor: docker-circleci
    steps:
      - checkout
      - run: npm ci
      - run:
          name: "Authenticate with registry"
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: "Publish to @dev"
          command: |
            npm run prepare-nightly
            npm publish --tag dev
            
  publish_release:
    executor: docker-circleci
    steps:
      - checkout
      - run: npm ci
      - run:
          name: "Authenticate with registry"
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: "Publish to @latest"
          command: |
            npm publish --tag latest

  merge_and_dist:
    executor: docker-circleci
    parameters:
      from:
        type: string
        default: "master"
      to:
        type: string
        default: "dev"
      message:
        type: string
        default: "chore(all): add latest build artifacts"
    steps:
      - checkout
      - run: npm ci
      - run: npm run bundle
      - run:
          name: "Configure git"
          command: |
            git config --global user.email "<>"
            git config --global user.name "Cherow"
            git config --global core.mergeoptions --no-edit
      - run:
          name: "Stash dist folder"
          command: |
            git add dist --force
            git stash
      - run:
          name: "Merge << parameters.from >> into << parameters.to >>"
          command: |
            git checkout << parameters.to >>
            git merge << parameters.from >> --no-ff --no-edit -Xtheirs
      - run:
          name: "Overwrite existing with stashed dist folders"
          command: |
            rm -rf dist
            git add .
            git stash pop
            git add dist --force
      - run:
          name: "Commit dist folders"
          command: git commit --allow-empty -m "<< parameters.message >>"
      - run:
          name: "Push << parameters.to >>"
          command: git push origin << parameters.to >>

workflows:
  build_test:
    jobs:
      - build:
          <<: *filter_ignore_dev
      - lint:
          <<: *filter_ignore_dev
      - bundle:
          <<: *filter_ignore_dev
      - test:
          <<: *filter_ignore_dev

  publish_nightly:
    jobs:
      - publish_dev:
          <<: *filter_only_dev
          
  publish_tag:
    jobs:
      - publish_release:
          <<: *filter_only_tag

  run_nightly:
    triggers:
      - schedule:
          <<: *filter_only_master
          cron: "0 0 * * *"
    jobs:
      - build
      - lint
      - bundle
      - test
      - merge_and_dist:
          requires:
            - build
            - lint
            - bundle
            - test
